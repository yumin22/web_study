// 원시타입과 객체타입은 값이 저장되거나 복사되는 과정이 서로 다르다

// 원시타입 = 불변값 (실제 메모리의 값 수정 X)
// -> 메모리 공간에 저장된 원본 데이터의 값이 변경되지 않는다는 점에서 불변값이라고 한다.

// 객체타입 = 가변값
// -> 참조값을 저장해서 가리킨다 (값이 저장된 메모리 주소를 가르킴)
// 메모리 값 수정

// 객체타입의 주의사항 
// 1. 의도치 않게 값이 수정될 수 있다 -> side effect (spread연산을 사용해서 새로운 객체를 만들어서 따로 저장하는 방식으로 예기치 않은 값 변경을 막는다-안전 "깊은 복사")
// 얕은 복사: 객체의 참조값을 복사함
// 깊은 복사: 새로운 객체를 생성하면서 프로퍼티만 따로 복사함

// 2. 객체간의 비교는 기본적으로 참조값을 기준으로 이루어진다.
// 얕은 비교: 참조값을 기준으로 기뵤
// JSON.stringify() 깊은 비교: 객체를 문자열로 변환하여 비교 (내장함수 활용)

// 3. 배열과 함수도 사실 객체다 !!!!
